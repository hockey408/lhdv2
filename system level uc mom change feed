If(OBJECT_ID('tempdb..#FLUX') Is Not Null)	
Begin Drop Table #FLUX End	
	
If(OBJECT_ID('tempdb..#CARDS') Is Not Null)	
Begin Drop Table #CARDS End	
	
	
DECLARE @system NVARCHAR (150)	
DECLARE @current_period AS DATETIME SET @current_period  = '8/31/2025' --loan date	
DECLARE @prior_period AS DATETIME SET @prior_period  = '7/31/2025' --loan date	
	
select distinct LOADDT,CUST_LINE_NBR 	
INTO #CARDS 	
from CRDADMPRD.CRDADMPRD.dbo.CDM_CARDS_LOAN	
where cast(loaddt as date) in ( @current_period	,@prior_period)
	
	
SELECT a.LoadDate, a.CreditLineNumber,(a.NetUtilized + b.SECUnfunded) as commitment,a.NetUtilized, b.SecUnfunded, a.ApplID,@system as system	
 INTO #FLUX 	
  FROM [CRDLMTUFCALC].[dbo].[CREDIT_LINE_MONTHLY] a	
  left join 	
     [CRDLMTUFCALC].[dbo].[CALCULATED_UNFUNDED] b	
	on a.LoadDate = b.LoadDate and a.CreditLineNumber = b.CreditLineNumber
	where cast(a.LoadDate as date) in (@current_period,@prior_period)
	
update #FLUX set system  = 'Cards' from #CARDS a inner join #FLUX b on a.CUST_LINE_NBR = CreditLineNumber and cast(a. LOADDT as date)=cast(b.LoadDate as date) where system is null	
update #FLUX set system  = 'CFD' where ApplID in ('CF')  and  system is null	
update #FLUX set system  = 'Miser Lines' where ApplID in ('ML')  and  system is null	
update #FLUX set system  = 'Miser Mortgage' where ApplID in ('MO')  and  system is null	
update #FLUX set system  = 'iMX' where CreditLineNumber like ('%iMX%')  and  system is null	
	
update #FLUX set system  = 'CBS' where ApplID in ('LN')  and  system is null	
update #FLUX set system  = 'UBS' where ApplID in ('LO')  and  system is null	
update #FLUX set system  = 'LJ' where ApplID in ('LJ')  and  system is null	
	
select * from #FLUX 	




SET NOCOUNT ON;				

DECLARE @MaxRunID INT;				

SELECT @MaxRunID = MAX(RunID)
FROM [CRDLMTUFCALC].[dbo].[CREDIT_LINE_MONTHLY];

SELECT 				
    a.LoadDate, 				
    a.ApplID, 				
    a.cif, 				
    a.CreditLineNumber,				
    LEFT(a.LineDescription,20) AS LineDescription,				
    a.GrossBorrowingBase,				
    a.NetBorrowingBase,				
    a.CommitmentParticipationSold,				
    a.FormulaLine 				
FROM [CRDLMTUFCALC].[dbo].[CREDIT_LINE_MONTHLY] a				
LEFT JOIN [CRDLMTUFCALC].[dbo].[CALCULATED_UNFUNDED] b				
    ON a.LoadDate = b.LoadDate 
   AND a.CreditLineNumber = b.CreditLineNumber				
WHERE a.RunID = @MaxRunID
  AND a.ApplID = 'LN'  -- CBS lines				
  AND a.FormulaLine = 1		
ORDER BY a.Cif;





set Nocount on				
set Nocount on				
				
declare @businessDate as datetime				
Set @businessDate = '08/31/2025'				
				
select 				
a.LoadDate, 				
a.ApplID, 				
a.cif, 				
a.CreditLineNumber ,				
left(a.LineDescription,20) as LineDescription ,				
a.GrossBorrowingBase,				
a.NetBorrowingBase,				
a.CommitmentParticipationSold,				
a.FormulaLine 				
from [CRDLMTUFCALC].[dbo].[CREDIT_LINE_MONTHLY] a				
left join				
[CRDLMTUFCALC].[dbo].[CALCULATED_UNFUNDED] b				
on a.LoadDate = b.LoadDate and a.CreditLineNumber = b.CreditLineNumber				
where a.LoadDate = @businessDate		and 		
          a.ApplID = 'LN' and --cbs lines				
		  a.FormulaLine = 1		
order by Cif				
				





/* ===== Last 12 months MoM by System with $/% changes & ≥5% abs flag ===== */
WITH bounds AS (
    SELECT AsOfMonthEnd = (SELECT MAX(m.LoadDate) FROM CRDLMTUFCALC.dbo.Credit_Line_Monthly AS m)
),
win AS (
    SELECT AsOfMonthEnd, StartMonthEnd = DATEADD(MONTH, -11, AsOfMonthEnd)
    FROM bounds
),
base AS (  -- derive System at row level, then aggregate to System x MonthEnd
    SELECT
        MonthEnd = CONVERT(date, m.LoadDate),
        System = CASE
                    WHEN c.Cust_Line_Number IS NOT NULL      THEN 'Cards'
                    WHEN m.Source = 'CF'                     THEN 'CFD'
                    WHEN m.CreditLineNumber LIKE '%iMX%'     THEN 'iMX'
                    WHEN m.Source = 'LN'                     THEN 'CBS'
                    WHEN m.Source = 'LO'                     THEN 'UBS'
                    WHEN m.Source = 'LJ'                     THEN 'LJ'
                    ELSE ISNULL(NULLIF(m.Source,''), 'Unknown')
                 END,
        SecUnfunded = u.SecUnfunded,
        NetUtilized = m.NetUtilized
    FROM CRDLMTUFCALC.dbo.Credit_Line_Monthly AS m
    JOIN CRDLMTUFCALC.dbo.Calculated_Unfunded AS u
      ON u.CreditLineNumber = m.CreditLineNumber
     AND u.LoadDate         = m.LoadDate
    LEFT JOIN crdadmprd.dbo.CDM_Cards_Loan    AS c
      ON c.Cust_Line_Number = m.CreditLineNumber
    CROSS JOIN win w
    WHERE m.LoadDate >= w.StartMonthEnd
      AND m.LoadDate <= w.AsOfMonthEnd
),
sys_month AS (
    SELECT
        b.MonthEnd,
        b.System,
        SecUnfunded = SUM(b.SecUnfunded),
        NetUtilized = SUM(b.NetUtilized),
        Commitment  = SUM(b.NetUtilized + b.SecUnfunded)
    FROM base b
    GROUP BY b.MonthEnd, b.System
),
chg AS (
    SELECT
        MonthEnd,
        System,
        SecUnfunded,
        NetUtilized,
        Commitment,
        Prev_SecUnfunded = LAG(SecUnfunded) OVER (PARTITION BY System ORDER BY MonthEnd),
        Prev_NetUtilized = LAG(NetUtilized) OVER (PARTITION BY System ORDER BY MonthEnd),
        Prev_Commitment  = LAG(Commitment)  OVER (PARTITION BY System ORDER BY MonthEnd)
    FROM sys_month
)
SELECT
    MonthEnd,
    System,
    SecUnfunded,
    NetUtilized,
    Commitment,

    -- MoM $ Changes
    MoM_Change_SecUnfunded = SecUnfunded - Prev_SecUnfunded,
    MoM_Change_NetUtilized = NetUtilized - Prev_NetUtilized,
    MoM_Change_Commitment  = Commitment  - Prev_Commitment,

    -- MoM % Changes (decimal; format as % in Power BI)
    MoM_Pct_SecUnfunded = CASE WHEN Prev_SecUnfunded IS NULL OR Prev_SecUnfunded = 0
                               THEN NULL
                               ELSE (SecUnfunded - Prev_SecUnfunded) / Prev_SecUnfunded
                          END,
    MoM_Pct_NetUtilized = CASE WHEN Prev_NetUtilized IS NULL OR Prev_NetUtilized = 0
                               THEN NULL
                               ELSE (NetUtilized - Prev_NetUtilized) / Prev_NetUtilized
                          END,
    MoM_Pct_Commitment  = CASE WHEN Prev_Commitment IS NULL OR Prev_Commitment = 0
                               THEN NULL
                               ELSE (Commitment - Prev_Commitment) / Prev_Commitment
                          END,

    -- Flag absolute % ≥ 5% on Commitment (for conditional formatting)
    MoM_Pct_Commitment_Abs_GE_5_Flag =
        CASE
            WHEN Prev_Commitment IS NOT NULL AND Prev_Commitment <> 0
                 AND ABS( (Commitment - Prev_Commitment) / Prev_Commitment ) >= 0.05
            THEN 1 ELSE 0
        END
FROM chg
ORDER BY MonthEnd, System;
