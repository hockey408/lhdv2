set Nocount on				
set Nocount on				
				
declare @businessDate as datetime				
Set @businessDate = '08/31/2025'				
				
select 				
a.LoadDate, 				
a.ApplID, 				
a.cif, 				
a.CreditLineNumber ,				
left(a.LineDescription,20) as LineDescription ,				
a.GrossBorrowingBase,				
a.NetBorrowingBase,				
a.CommitmentParticipationSold,				
a.FormulaLine 				
from [CRDLMTUFCALC].[dbo].[CREDIT_LINE_MONTHLY] a				
left join				
[CRDLMTUFCALC].[dbo].[CALCULATED_UNFUNDED] b				
on a.LoadDate = b.LoadDate and a.CreditLineNumber = b.CreditLineNumber				
where a.LoadDate = @businessDate		and 		
          a.ApplID = 'LN' and --cbs lines				
		  a.FormulaLine = 1		
order by Cif				
				





/* ===== Last 12 months MoM by System with $/% changes & ≥5% abs flag ===== */
WITH bounds AS (
    SELECT AsOfMonthEnd = (SELECT MAX(m.LoadDate) FROM CRDLMTUFCALC.dbo.Credit_Line_Monthly AS m)
),
win AS (
    SELECT AsOfMonthEnd, StartMonthEnd = DATEADD(MONTH, -11, AsOfMonthEnd)
    FROM bounds
),
base AS (  -- derive System at row level, then aggregate to System x MonthEnd
    SELECT
        MonthEnd = CONVERT(date, m.LoadDate),
        System = CASE
                    WHEN c.Cust_Line_Number IS NOT NULL      THEN 'Cards'
                    WHEN m.Source = 'CF'                     THEN 'CFD'
                    WHEN m.CreditLineNumber LIKE '%iMX%'     THEN 'iMX'
                    WHEN m.Source = 'LN'                     THEN 'CBS'
                    WHEN m.Source = 'LO'                     THEN 'UBS'
                    WHEN m.Source = 'LJ'                     THEN 'LJ'
                    ELSE ISNULL(NULLIF(m.Source,''), 'Unknown')
                 END,
        SecUnfunded = u.SecUnfunded,
        NetUtilized = m.NetUtilized
    FROM CRDLMTUFCALC.dbo.Credit_Line_Monthly AS m
    JOIN CRDLMTUFCALC.dbo.Calculated_Unfunded AS u
      ON u.CreditLineNumber = m.CreditLineNumber
     AND u.LoadDate         = m.LoadDate
    LEFT JOIN crdadmprd.dbo.CDM_Cards_Loan    AS c
      ON c.Cust_Line_Number = m.CreditLineNumber
    CROSS JOIN win w
    WHERE m.LoadDate >= w.StartMonthEnd
      AND m.LoadDate <= w.AsOfMonthEnd
),
sys_month AS (
    SELECT
        b.MonthEnd,
        b.System,
        SecUnfunded = SUM(b.SecUnfunded),
        NetUtilized = SUM(b.NetUtilized),
        Commitment  = SUM(b.NetUtilized + b.SecUnfunded)
    FROM base b
    GROUP BY b.MonthEnd, b.System
),
chg AS (
    SELECT
        MonthEnd,
        System,
        SecUnfunded,
        NetUtilized,
        Commitment,
        Prev_SecUnfunded = LAG(SecUnfunded) OVER (PARTITION BY System ORDER BY MonthEnd),
        Prev_NetUtilized = LAG(NetUtilized) OVER (PARTITION BY System ORDER BY MonthEnd),
        Prev_Commitment  = LAG(Commitment)  OVER (PARTITION BY System ORDER BY MonthEnd)
    FROM sys_month
)
SELECT
    MonthEnd,
    System,
    SecUnfunded,
    NetUtilized,
    Commitment,

    -- MoM $ Changes
    MoM_Change_SecUnfunded = SecUnfunded - Prev_SecUnfunded,
    MoM_Change_NetUtilized = NetUtilized - Prev_NetUtilized,
    MoM_Change_Commitment  = Commitment  - Prev_Commitment,

    -- MoM % Changes (decimal; format as % in Power BI)
    MoM_Pct_SecUnfunded = CASE WHEN Prev_SecUnfunded IS NULL OR Prev_SecUnfunded = 0
                               THEN NULL
                               ELSE (SecUnfunded - Prev_SecUnfunded) / Prev_SecUnfunded
                          END,
    MoM_Pct_NetUtilized = CASE WHEN Prev_NetUtilized IS NULL OR Prev_NetUtilized = 0
                               THEN NULL
                               ELSE (NetUtilized - Prev_NetUtilized) / Prev_NetUtilized
                          END,
    MoM_Pct_Commitment  = CASE WHEN Prev_Commitment IS NULL OR Prev_Commitment = 0
                               THEN NULL
                               ELSE (Commitment - Prev_Commitment) / Prev_Commitment
                          END,

    -- Flag absolute % ≥ 5% on Commitment (for conditional formatting)
    MoM_Pct_Commitment_Abs_GE_5_Flag =
        CASE
            WHEN Prev_Commitment IS NOT NULL AND Prev_Commitment <> 0
                 AND ABS( (Commitment - Prev_Commitment) / Prev_Commitment ) >= 0.05
            THEN 1 ELSE 0
        END
FROM chg
ORDER BY MonthEnd, System;
