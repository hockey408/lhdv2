MoM % :=
VAR curMonth = MAX ( T[Month_End] )
VAR prevVal  =
    CALCULATE (
        [Total Exposure $],
        FILTER ( ALL ( T[Month_End] ), T[Month_End] = EOMONTH ( curMonth, -1 ) )
    )
RETURN
DIVIDE ( [Total Exposure $] - prevVal, prevVal )


Severity Delta :=
VAR curMonth = MAX ( T[Month_End] )
VAR prevSev  =
    CALCULATE (
        [Severity (Avg)],
        FILTER ( ALL ( T[Month_End] ), T[Month_End] = EOMONTH ( curMonth, -1 ) )
    )
RETURN
[Severity (Avg)] - prevSev


Flag Change :=
VAR curMonth = MAX ( T[Month_End] )
VAR curFlag  = [Current Flag]     -- 0 or 1
VAR prevFlag =
    CALCULATE (
        MAX ( T[Flag_Anom] ),
        FILTER ( ALL ( T[Month_End] ), T[Month_End] = EOMONTH ( curMonth, -1 ) )
    )
RETURN
SWITCH (
    TRUE(),
    curFlag = 1 && prevFlag = 0, "🆕 New Flag",
    curFlag = 0 && prevFlag = 1, "✅ Cleared",
    curFlag = 1 && prevFlag = 1, "↔ Still Flagged",
    "—"
)

Indicator Tag (Current) :=
SELECTEDVALUE ( T[Indicator_Tag], "—" )

Indicator Tag (Latest) :=
VAR lm =
    CALCULATE ( MAX ( T[Month_End] ), ALLEXCEPT ( T, T[RC_CODE] ) )
RETURN
CALCULATE ( SELECTEDVALUE ( T[Indicator_Tag], "—" ), T[Month_End] = lm )










Metrics_Definitions =
DATATABLE (
    "Metric", STRING,
    "Definition", STRING,
    "Calc_Type", STRING,
    "Formula_Text", STRING,
    "Unit", STRING,
{
    { "Actual", "Recorded month-end balance for the RC_Code.", "Column", "T[Actual]", "$" },
    { "Forecast_Selected", "Chosen forecast after model & seasonality selection.", "Column/Calc", "Selected model (REG12/REG36/MA6/MA12) × seasonal lift.", "$" },
    { "Residual", "Difference between Actual and Forecast.", "Row Calc", "Actual − Forecast_Selected", "$" },
    { "AbsResid", "Magnitude of the residual.", "Row Calc", "ABS(Residual)", "$" },
    { "MoM_Abs", "Month-over-month absolute change in balance.", "Row Calc", "ABS(Actual − Prev_Month_Actual)", "$" },
    { "MoM_Pct_Abs", "Absolute % change vs prior month.", "Row Calc", "ABS((Actual − Prev)/Prev)", "%" },
    { "Z_Resid", "Standardized residual vs own history.", "Window Stat", "(AbsResid − mean_abs_resid) / sd_abs_resid", "Z" },
    { "Z_MoM_Abs", "Standardized MoM $ change vs own history.", "Window Stat", "(MoM_Abs − mean_mom_abs) / sd_mom_abs", "Z" },
    { "Z_MoM_Pct", "Standardized MoM % change vs own history.", "Window Stat", "(MoM_Pct_Abs − mean_mom_pct) / sd_mom_pct", "Z" },

    { "Severity_Raw", "Weighted signal combining Z-scores and $ impact.", "Row Calc",
      "0.65*|Z_Resid| + 0.07*|Z_MoM_Abs| + 0.25*RankLM(AbsResid) + 0.03*RankLM(MoM_Abs)", "unitless" },

    { "Severity_0_100_v5", "0–100 nonlinear scaling of Severity_Raw.", "Row Calc",
      "ROUND(100*(1 − EXP(−Severity_Raw)),0)", "0–100" },

    { "Flag_Anom", "Anomaly flag for latest month (severity above threshold).", "Row Flag",
      "IF(Severity_0_100_v5 ≥ Threshold, 1, 0)", "0/1" },

    { "Persist_3m", "Share of last N months flagged (recurrence).", "Cohort Stat",
      "AVG(Flag_Anom over last N months)", "0–1" },

    { "Latest_Exposure", "Actual balance for the latest month.", "Agg (Latest)",
      "SUMX( rows where Month_End = MAX(Month_End), Actual )", "$" },

    { "Portfolio R²", "Fit quality: variance explained by forecasts.", "Portfolio Stat",
      "1 − SSE/SST; SSE=Σ(Act−Fcst)², SST=Σ(Act−mean(Act))²", "0–1" },

    { "RMSE", "Root mean square error (typical $ forecast error).", "Stat",
      "SQRT( AVG( (Act−Fcst)² ) )", "$" },

    { "MAE", "Mean absolute error (typical |$| error).", "Stat",
      "AVG( ABS(Act−Fcst) )", "$" },

    { "MAPE", "Mean absolute % error (scale-independent).", "Stat",
      "AVG( ABS((Act−Fcst)/Act) ), ignoring Act=0", "%" },

    { "Bias (Mean Residual)", "Average signed error (over/under-forecast).", "Stat",
      "AVG( Act−Fcst )", "$" },

    { "Best_Model", "Model picked per RC based on fit rules.", "Label",
      "Argmin(RMSE) with R² guardrails → REG12/REG36/MA6/MA12", "-" },

    { "Seasonal Lift (lift_final)", "Quarterly adjustment damped for spikes.", "Window Calc",
      "Capped & shrunk quarter lift; extra damp if recent spikes.", "multiplier" },

    { "Flagged Exposure %", "Share of exposure in flagged RCs (latest).", "Portfolio KPI",
      "SUM(Actual where Severity≥Thr) / SUM(Actual)", "%" },

    { "Severity_Category", "Bucketed bands for communication.", "Label",
      "Low<40, Moderate 40–69, High 70–84, Critical 85+", "-" }
})





Flow_Steps =
DATATABLE (
    "Step_ID", INTEGER,
    "Step_Label", STRING,
    "Step_Description", STRING,
    "Icon", STRING,
    {
        { 1, "Detect Anomalies", "Identify RC_Codes or systems with unusual changes.", "🔍" },
        { 2, "Rank Severity", "Rank anomalies based on severity score (0–100).", "⚖️" },
        { 3, "Investigate RC_Code", "Drill into RC_Code details and variance metrics.", "🧩" },
        { 4, "Drill to Accounts", "Analyze top accounts driving residuals.", "📊" },
        { 5, "Tag Cause", "Assign likely cause (structural change, timing, etc.)", "🏷️" },
        { 6, "Report Summary", "Summarize findings and portfolio impact.", "📈" }
    }
)




=AVERAGEIFS(T[AbsResid], T[RC_CODE], [@RC_CODE])

=LET(rc,[@RC_CODE], IFERROR( AVERAGEIFS(T[Resid], T[RC_CODE], rc), 0 ))

=LET(
  rc,[@RC_CODE],
  ybar, SUMIFS(T[Actual],T[RC_CODE],rc) / COUNTIFS(T[RC_CODE],rc),
  sse,  SUMPRODUCT( (T[RC_CODE]=rc) * (T[Actual]-T[Forecast_Selected])^2 ),
  sst,  SUMPRODUCT( (T[RC_CODE]=rc) * (T[Actual]-ybar)^2 ),
  IF(sst=0,0,1 - sse/sst)
)

=LET(
  rc,[@RC_CODE],
  n, COUNTIFS(T[RC_CODE],rc),
  IF(n=0,0, SQRT( SUMPRODUCT((T[RC_CODE]=rc)*(T[Actual]-T[Forecast_Selected])^2) / n ))
)

=LET(rc,[@RC_CODE], IFERROR( AVERAGEIFS(ABS(T[Actual]-T[Forecast_Selected]), T[RC_CODE], rc), 0 ))


=LET(rc,[@RC_CODE], IFERROR( AVERAGEIFS(T[Resid], T[RC_CODE], rc), 0 ))


=LET(rc,[@RC_CODE], STDEV.S( IF(T[RC_CODE]=rc, T[Resid]) ))






=LET(rc,[@RC_CODE],
y,FILTER(T[Actual],T[RC_CODE]=rc),
yhat,FILTER(T[Forecast_Selected],T[RC_CODE]=rc),
ybar,AVERAGE(y),
SSE,SUMPRODUCT((y-yhat)^2),
SST,SUMPRODUCT((y-ybar)^2),
IF(SST=0,0,1-SSE/SST))

=SUMPRODUCT(Summary[R2_per_RC],Summary[Latest_Exposure]) / SUM(Summary[Latest_Exposure])

=COUNTIF(Summary[R2_per_RC],"<0.5")/COUNTA(Summary[R2_per_RC])





=1 - (SUMXMY2(T[Actual],T[Forecast_Selected]) / SUMPRODUCT((T[Actual]-AVERAGE(T[Actual]))^2))

=LET(
lm,$H$2,
Amean,SUMIFS(T[Actual],T[Month_End],lm)/COUNTIFS(T[Month_End],lm),
SSE,SUMPRODUCT((T[Month_End]=lm)*(T[Actual]-T[Forecast_Selected])^2),
SST,SUMPRODUCT((T[Month_End]=lm)*(T[Actual]-Amean)^2),
IF(SST=0,0,1 - SSE/SST)
)

=SQRT( SUMXMY2(T[Actual],T[Forecast_Selected]) / COUNT(T[Actual]) )


=LET(lm,$H$2, SQRT(SUMPRODUCT((T[Month_End]=lm)*(T[Actual]-T[Forecast_Selected])^2) / COUNTIFS(T[Month_End],lm)))

=AVERAGE(ABS(T[Actual]-T[Forecast_Selected]))

=AVERAGEIFS(ABS(T[Actual]-T[Forecast_Selected]), T[Month_End], $H$2)

=AVERAGE(IFERROR(ABS((T[Actual]-T[Forecast_Selected])/T[Actual]),NA()))


=AVERAGE(T[Actual]-T[Forecast_Selected])


=STDEV.S(T[Actual]-T[Forecast_Selected])







=SUMIFS(T[Actual], T[Month_End], $H$2, T[Severity_0_100], ">=70")



=COUNTIFS(T[Month_End],$H$2,T[Severity_0_100],">=70") / COUNTIFS(T[Month_End],$H$2)



=IFERROR(
  SUMIFS(T[Severity_0_100_v5], T[month_end],$H$2, T[Include3_AnyPos],1, T[Severity_0_100_v5],">=",70)
/ COUNTIFS(T[month_end],$H$2, T[Include3_AnyPos],1)
,0)

=SUMIFS(T[Actual], T[month_end],$H$2, T[Include3_AnyPos],1, T[Severity_0_100_v5],">=",70)


=MEDIAN(IF((T[month_end]=$H$2)*(T[Include3_AnyPos]=1), T[AbsResid]))